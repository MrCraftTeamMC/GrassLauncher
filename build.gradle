plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'de.undercouch.download' version '5.6.0'
}

apply plugin: 'groovy'

group = rootProject.maven_group
version = rootProject.release_version
base.archivesName = rootProject.archives_base_name

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://jitpack.io'
    }
    mavenLocal()
    mavenCentral()
}

def CompileTasks = [
    JavaCompile,
    GroovyCompile
]

CompileTasks.forEach { clz ->
    tasks.withType(clz).configureEach { tsk ->
        tsk.options.encoding = "UTF-8"
    }
}

def DocTasks = [
    Javadoc
]

DocTasks.forEach { clz ->
    tasks.withType(clz).configureEach { tsk ->
        tsk.options.encoding = "UTF-8"
    }
}

tasks.withType(Test).configureEach {
    it.systemProperty "file.encoding", "UTF-8"
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
        }
        groovy {
            srcDirs "src/main/groovy"
        }
    }
    test {
        java {
            srcDirs "src/test/java"
        }
        groovy {
            srcDirs "src/test/groovy"
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        MrCraftTeamMCMaven(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/MrCraftTeamMC/GrassLauncher"
            credentials {
                username = project.findProperty("gh_maven_username") ?: System.getenv("USERNAME")
                password = project.findProperty("gh_maven_password") ?: System.getenv("TOKEN")
            }
        }
        // Jitpack
    }
}

configurations {
}

dependencies {
    // Groovy
    //implementation gradleApi()
    implementation localGroovy()

    // Annotations
    annotationProcessor(compileOnly("org.projectlombok:lombok:1.18.30"))
    compileOnly 'org.jetbrains:annotations:24.1.0'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // Logging
    implementation "org.apache.logging.log4j:log4j-api:2.23.0"
    implementation "org.apache.logging.log4j:log4j-core:2.23.0"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.23.0"

    // Common
    //implementation "com.google.guava:guava:33.0.0-jre"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.16.1"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:2.16.1"

    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:2.16.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1"

    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    //implementation "io.netty:netty-all:4.1.105.Final"
    //implementation "commons-codec:commons-codec:1.16.0"
    //implementation "commons-net:commons-net:3.10.0"
    implementation "commons-io:commons-io:2.15.1"
    //implementation "org.apache.commons:commons-collections4:4.4"
    //implementation "org.apache.commons:commons-compress:1.25.0"
    //implementation "org.apache.commons:commons-rng-bom:1.5"
    //implementation "org.apache.commons:commons-text:1.11.0"
    implementation "org.apache.commons:commons-lang3:3.14.0"

    // Tests
    annotationProcessor(testCompileOnly("org.projectlombok:lombok:1.18.30"))
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()

    ignoreFailures true

    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Main-Class": "xyz.mrcraftteammc.grasslauncher.main.Main"
        attributes "Implementation-Title": "Gradle"
    }

    zip64 true
}

shadowJar {
    zip64 true
}
