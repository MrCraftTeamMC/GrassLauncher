plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'de.undercouch.download' version '5.6.0'
}

apply plugin: 'groovy'

group = rootProject.maven_group
version = rootProject.release_version
base.archivesName = rootProject.archives_base_name

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://maven.fabricmc.net'
    }
    maven {
        url 'https://jitpack.io'
    }
    mavenLocal()
    mavenCentral()
}

def CompileTasks = [
    JavaCompile,
    GroovyCompile
]

CompileTasks.forEach { clz ->
    tasks.withType(clz).configureEach { tsk ->
        tsk.options.encoding = "UTF-8"
    }
}

def DocTasks = [
    Javadoc
]

DocTasks.forEach { clz ->
    tasks.withType(clz).configureEach { tsk ->
        tsk.options.encoding = "UTF-8"
    }
}

tasks.withType(Test).configureEach {
    it.systemProperty "file.encoding", "UTF-8"
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
        }
        groovy {
            srcDirs "src/main/groovy"
        }
    }
    test {
        java {
            srcDirs "src/test/java"
        }
        groovy {
            srcDirs "src/test/groovy"
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        MrCraftTeamMC(MavenPublication) {
            artifactId "grasslauncher-java"

            from(components.java)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/mrcraftteammc/grasslauncher-java"
            credentials {
                username = project.findProperty("gh_maven_username") ?: System.getenv("USERNAME")
                password = project.findProperty("gh_maven_password") ?: System.getenv("TOKEN")
            }

            allowInsecureProtocol true
        }

//        maven {
//            name = "LocalMavenSnapshot"
//            url = "file:/${project.local_maven_repo}/Snapshot"
//        }
//
//        maven {
//            name = "LocalMavenReleases"
//            url = "file:/${project.local_maven_repo}/Releases"
//        }
        // Jitpack
    }
}

configurations {
    implementation.extendsFrom shadow
}

dependencies {
    // Groovy
    //implementation gradleApi()
//    implementation 'org.apache.groovy:groovy-all:4.0.19'
    implementation localGroovy()

    // Annotations
    annotationProcessor(implementation("org.projectlombok:lombok:1.18.30"))
    implementation 'org.jetbrains:annotations:24.1.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Logging
    shadow "org.apache.logging.log4j:log4j-api:2.23.1"
    shadow "org.apache.logging.log4j:log4j-core:2.23.1"
    shadow "org.apache.logging.log4j:log4j-slf4j-impl:2.23.1"

    // Common
    shadow "com.fasterxml.jackson.core:jackson-databind:2.16.2"
    shadow "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.2"
    shadow "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:2.16.2"
    shadow "com.fasterxml.jackson.module:jackson-module-parameter-names:2.16.2"
    shadow "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.0"
    shadow "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.2"

    shadow "com.squareup.okhttp3:okhttp:4.12.0"
    shadow "io.netty:netty-all:4.1.107.Final"
    //shadow "commons-codec:commons-codec:1.16.0"
    //shadow "commons-net:commons-net:3.10.0"
    shadow "commons-io:commons-io:2.15.1"
    //shadow "org.apache.commons:commons-collections4:4.4"
    //shadow "org.apache.commons:commons-compress:1.25.0"
    //shadow "org.apache.commons:commons-rng-bom:1.5"
    //shadow "org.apache.commons:commons-text:1.11.0"
    shadow "org.apache.commons:commons-lang3:3.14.0"

    shadow "com.google.guava:guava:33.0.0-jre"
    shadow "org.ow2.asm:asm-commons:9.6"
    shadow "org.ow2.asm:asm-tree:9.6"
    shadow "org.ow2.asm:asm-util:9.6"

    // UI
    shadow 'com.formdev:flatlaf:3.4'

    // Tests
    annotationProcessor(testImplementation("org.projectlombok:lombok:1.18.30"))
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

processResources {
    inputs.property "version", project.version

    filteringCharset "UTF-8"
    filesMatching("config.yml") {
        expand "version": project.version
    }
}

test {
    useJUnitPlatform()

    ignoreFailures true

    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed"
    }
}

tasks.register("DownloadTranslate") {
    def langLibs = { Project p ->
        p.buildDir.toPath().resolve()
    }

    delete fileTree(langLibs(rootProject)) {
        include '*'
    }

    download {
        src ""
        dest project.buildDir
    }

    exec {
        commandLine ""
    }

    copy {
        from ""
        into ""
    }
}

//jar.dependsOn "DownloadTranslate"

jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Main-Class": "xyz.mrcraftteammc.grasslauncher.main.Main"
        attributes "Implementation-Title": "Gradle"
    }

    zip64 true
}

shadowJar {
    configurations = [project.configurations.shadow]

    def reloc = {
        p -> relocate((String) p, "xyz.mrcraftteammc.library.$p")
    }

    mergeGroovyExtensionModules()
    mergeServiceFiles()
    zip64 true
}

sourcesJar {
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}
